@baseUrl = http://localhost:3000
@username = admin
@password = securitypassword123
@jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEiLCJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNzIyNDcwNzk0LCJleHAiOjE3MjI0NzQzOTR9.M4BLQfTVa-VEucyPKvYCOn4G5bgnrovzmNYN2YvuOtI

### Generate JWT Token
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "{{username}}",
  "password": "{{password}}"
}

### Register New User
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "{{username}}",
  "password": "{{password}}"
}

### Create New User (Protected)
POST {{baseUrl}}/api/users
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "cpf": "39292420011",
  "name": "Dwight Schrute",
  "birth_date": "1970-01-20",
  "address": {
    "street": "1725 Slough Avenue",
    "house_number": "1725",
    "complement": "",
    "neighborhood": "Scranton",
    "city": {
      "city_name": "Scranton",
      "state": {
        "state_name": "Pennsylvania",
        "iso_code": "PA",
        "country": {
          "country_name": "United States",
          "iso_code": "US"
        }
      }
    },
    "postal_code": "18505"
  },
  "is_active": true
}

### Update Existing User (Protected)
PUT {{baseUrl}}/api/users/1
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "cpf": "57396597013",
  "name": "Dwight Schrute Updated",
  "birth_date": "1970-01-20",
  "address": {
    "street": "1725 Slough Avenue",
    "house_number": "1725",
    "complement": "",
    "neighborhood": "Scranton",
    "city": {
      "city_name": "Scranton2",
      "state": {
        "state_name": "Pennsylvania",
        "iso_code": "PA",
        "country": {
          "country_name": "United States",
          "iso_code": "US"
        }
      }
    },
    "postal_code": "18505"
  },
  "is_active": true
}

### Delete User (Protected)
DELETE {{baseUrl}}/api/users/1
Authorization: Bearer {{jwt_token}}

### Get User by ID (Protected)
GET {{baseUrl}}/api/users/1
Authorization: Bearer {{jwt_token}}

### Get All Users (Protected)
GET {{baseUrl}}/api/users
Authorization: Bearer {{jwt_token}}
